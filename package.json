{
  "name": "linter-hadolint",
  "version": "1.0.0",
  "description": "Lint Docker files using Hadolint",
  "private": true,
  "main": "./lib/main.js",
  "scripts": {
    "test": "apm test",
    "lint": "eslint ."
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-hadolint.git"
  },
  "keywords": [
    "atom",
    "docker",
    "linter",
    "hadolint"
  ],
  "license": "MIT",
  "configSchema": {
    "executablePath": {
      "type": "string",
      "default": "hadolint",
      "description": "Semicolon separated list of paths to search for the hadolint binary (e.g. `/usr/local/bin/hadolint`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths e.g. `$PROJECT/bin/hadolint` or `$PROJECT_NAME/bin/hadolint`"
    },
    "ignoreErrorCodes": {
      "title": "Ignored Error Codes",
      "type": "array",
      "default": [],
      "description": "For a list of code visit https://github.com/lukasmartinelli/hadolint/wiki"
    },
    "showRuleIdInMessage": {
      "title": "Show Rule ID in Messages",
      "type": "boolean",
      "default": true
    }
  },
  "engines": {
    "atom": ">=1.13.0 <2.0.0"
  },
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "5.1.0",
    "fs-plus": "3.1.1"
  },
  "devDependencies": {
    "eslint": "6.0.1",
    "eslint-config-airbnb-base": "13.2.0",
    "eslint-plugin-import": "2.18.0",
    "jasmine-fix": "1.3.1"
  },
  "package-deps": [
    "linter:2.0.0",
    "language-docker"
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "ignorePaths": [
      "spec/fixtures/**"
    ],
    "semanticCommits": true,
    "rangeStrategy": "pin",
    "packageRules": [
      {
        "packagePatterns": [
          "^eslint"
        ],
        "groupName": "ESLint packages"
      }
    ]
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "globals": {
      "atom": true
    },
    "env": {
      "node": true,
      "browser": true
    }
  }
}
